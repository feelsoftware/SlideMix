plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlinx-serialization"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.feelsoftware.slidemix"
    compileSdk 36
    buildToolsVersion = '36.0.0'
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        resourceConfigurations += ['en', 'uk']
    }

    buildTypes {
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
        release {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions.resources.excludes += "**/previous-compilation-data.bin"
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"

    implementation files('libs/ffmpeg-kit-gpl-6.0.aar')

    // To fix: ClassNotFoundException: Didn't find class "com.arthenica.smartexception.java.Exceptions" on path
    implementation files('libs/smart-exception-common-0.2.1.jar')
    implementation files('libs/smart-exception-java-0.2.1.jar')
}
